{"version":3,"file":"component---src-pages-guides-examples-parameters-md-9ad047e708d9f41472c8.js","mappings":"mTAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAFDC,EAAUD,EAAVC,WACGC,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,MACE,GAAM,qCAAmC,sCAE3CA,EAAAA,EAAAA,KAAA,MACE,GAAM,iIAA+H,mIAEvIA,EAAAA,EAAAA,KAAA,kCACAA,EAAAA,EAAAA,KAAA,mBACEA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,eACbH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAI,kBACnBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAI,kCACnBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAI,0CACnBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAI,4BAGvBH,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,mBAAiB,i7DAgDtC,CAEAT,EAAWU,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/guides/examples/parameters.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/designer-python-api/designer-python-api/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"parameter-controled-by-a-function\"\n    }}>{`Parameter controled by a function`}</h1>\n    <h2 {...{\n      \"id\": \"this-sample-shows-how-to-setup-a-parameter-that-is-controled-by-a-function-on-a-uniform-node-in-a-substance-compositing-graph\"\n    }}>{`This sample shows how to setup a parameter that is controled by a function on a uniform node in a Substance Compositing graph.`}</h2>\n    <p>{`To use this example:`}</p>\n    <blockquote>\n      <ol parentName=\"blockquote\">\n        <li parentName=\"ol\">{`Open Designer`}</li>\n        <li parentName=\"ol\">{`Go to Windows > Python Editor`}</li>\n        <li parentName=\"ol\">{`Copy the code below inside the editor`}</li>\n        <li parentName=\"ol\">{`Press the Play button`}</li>\n      </ol>\n    </blockquote>\n    <hr></hr>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import os\nimport sd\nfrom sd.tools import io\nfrom sd.ui.graphgrid import *\nfrom sd.api.sbs.sdsbscompgraph import *\nfrom sd.api.sdbasetypes import *\nfrom sd.api.sdvaluefloat4 import *\n\ndef main(aSDContext):\n     cGridSize = GraphGrid.sGetFirstLevelSize()\n    sbsPackageName = \"MySample\"\n\n    # =========================================================================\n    # Create a new Package\n    sdPackageMgr = aSDContext.getSDApplication().getPackageMgr()\n    sdPackage = sdPackageMgr.newUserPackage()\n\n    # =========================================================================\n    # Create a new Substance Compositing Graph in this package\n    sdSBSCompGraph = SDSBSCompGraph.sNew(sdPackage)\n\n    #   - Set the graph identifier\n    sdSBSCompGraph.setIdentifier(sbsPackageName)\n\n    # =========================================================================\n    # Create a uniform color node\n    sdSBSCompNodeUniform = sdSBSCompGraph.newNode('sbs::compositing::uniform')\n    sdSBSCompNodeUniform.setPosition(float2(-2*cGridSize, cGridSize))\n\n    #   - Get the input property that controls the output color\n    uniformNodePropertyOutputColor = sdSBSCompNodeUniform.getPropertyFromId('outputcolor', SDPropertyCategory.Input)\n\n    #   - Create a new property graph of type SDSBSFunctionGraph\n    propertySBSFunctionGraph = sdSBSCompNodeUniform.newPropertyGraph(uniformNodePropertyOutputColor, 'SDSBSFunctionGraph')\n\n    #   - Fill the property function. Here create a simple constant node that will return a green value\n    float4ConstantNode = propertySBSFunctionGraph.newNode('sbs::function::const_float4')\n    float4ConstantNode.setInputPropertyValueFromId('__constant__', SDValueFloat4.sNew(float4(0, 1, 0, 1)))\n\n    # Set the constant node as output of the property's SBSFunctionGraph\n    propertySBSFunctionGraph.setOutputNode(float4ConstantNode, True)\n\nif __name__ == '__main__':\n    main(sd.getContext())\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}